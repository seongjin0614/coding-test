import sys
# input.txt 파일은 현재 파이썬 파일과 같은 경로에 위치
sys.stdin = open("input.txt","r")
# ------------------------------------------------------------------------------------------------------------------------------------------------   
# <문제>
# : 2178 _ 미로 탐색

# <등급>
# : 실버 1
    
# <내가 파악한 요구사항>
# : 그래프 탐색

# <실제 요구사항>
# : 그래프 이론, 그래프 탐색, 너비 우선 탐색
    
# ------------------------------------------------------------------------------------------------------------------------------------------------   
# <수도코드>
'''
n,m 을 입력 받음
그래프 생성

4방향 탐색
만약 4방향 중 1이 있다면

'''
# ------------------------------------------------------------------------------------------------------------------------------------------------   
# <문제풀이>
from collections import deque

n,m = map(int, input().split())

maze = [list(map(int, input())) for _ in range(n)]

# 방향 벡터 (상, 하, 좌, 우)
dx = [-1, 1, 0, 0]
dy = [0, 0, -1, 1]

# BFS 함수
def bfs(x, y):
    
    queue = deque()
    queue.append((x, y))

    while queue:
        x, y = queue.popleft()

        # 현재 위치에서 네 방향으로 이동
        for i in range(4):
            nx, ny = x + dx[i], y + dy[i]

            # 범위를 벗어나거나 이동 불가능한 칸이면 무시
            if nx < 0 or nx >= n or ny < 0 or ny >= m:
                continue
            if maze[nx][ny] == 0:
                continue

            # 처음 방문하는 칸만 거리 기록
            if maze[nx][ny] == 1:
                maze[nx][ny] = maze[x][y] + 1
                queue.append((nx, ny))

    # 도착지점의 값(거리) 반환
    return maze[n-1][m-1]

# 결과 출력
print(bfs(0, 0))

# ------------------------------------------------------------------------------------------------------------------------------------------------   
# <정답 및 다른풀이>

n, m = map(int, input().split())
maze = [list(map(int, input())) for _ in range(n)]

    # 상 하 좌 우
dx = [-1, 1, 0, 0]
dy = [0, 0, -1, 1]

def BFS(x,y):
    queue = deque()
    queue.append((x,y))
    
    while queue:
        x,y = queue.popleft()
        
        for i in range(4):
            nx, ny = x+dx[i], y+dy[i]
            
            

# ------------------------------------------------------------------------------------------------------------------------------------------------   
# <문제를 통한 학습 내용>